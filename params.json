{"tagline":"Simple Object to Entity mapper for Windows Azure Storage","body":"### Features\r\n * Super simple access to Azure Table Storage. Use your existing POCO C# objects and map Table Storage entities to them.\r\n * Easily unit test your code that accesses Table Storage with an in-memory test double. No complicated mocks or stubs required!\r\n * Automatically batches large reads & writes to optimize common operations.\r\n * Handles quirks of your local Azure emulator for you. (Upserts work locally!)\r\n\r\n### Example\r\n\r\n```csharp\r\nusing TechSmith.Hyde;\r\nusing TechSmith.Hyde.Table;\r\n\r\npublic class Color\r\n{\r\n  public string HexColorCode\r\n  {\r\n    get;\r\n    set;\r\n  }\r\n}\r\n\r\nvar account = new ConnectionStringCloudStorageAccount( \"ConnStr\" );\r\nvar tableStorage = new AzureTableStorageProvider( account );\r\n\r\nvar color = tableStorage.Get<Color>( \"MyColorsTable\", \"Red\", \"Crimson\" );\r\n\r\n```\r\n\r\nMore examples and getting started help can be found [on the wiki](https://github.com/TechSmith/hyde/wiki/Getting-Started)\r\n\r\n###License\r\nBSD 3-Clause, see http://www.opensource.org/licenses/BSD-3-Clause","name":"Hyde","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}